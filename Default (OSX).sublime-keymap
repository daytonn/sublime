[
// File Management
// ---------------

  // Open Keybindings file
  {
    "keys": ["alt+super+,"],
    "command": "open_file",
    "args": { "file": "${packages}/User/Default (OSX).sublime-keymap" }
  },

  // Rename file
  {
    "keys": ["super+alt+ctrl+shift+r"],
    "command": "side_bar_rename"
  },

  {
    "keys": ["super+alt+ctrl+shift+m"],
    "command": "side_bar_move"
  },

// Limit cycling to group
// ----------------------

  // Cycle views
  { "keys": ["super+shift+["], "command": "prev_view_in_group" },
  { "keys": ["super+shift+]"], "command": "next_view_in_group" },

// Selection
  {
    "keys": ["super+shift+["],
    "command": "prev_view_in_group"
  },

  {
    "keys": ["super+shift+]"],
    "command": "next_view_in_group"
  },

// Find
// ----

  // Find and Replace in file by default
  {
    "keys": ["super+f"],
    "command": "show_panel",
    "args": {"panel": "replace"}
  },

  // Find and Replace in project by default
  {
    "keys": ["super+shift+f"],
    "command": "show_panel",
    "args": {"panel": "find_in_files"}
  },

  // Replace next match
  {
    "keys": ["super+alt+f"],
    "command": "replace_next"
  },

  // Find next match
  {
    "keys": ["super+g"],
    "command": "find_next"
  },

  // Find previous match
  {
    "keys": ["super+shift+g"],
    "command": "find_prev"
  },

  // ⌥⌘F Replace selection
  {
    "keys": ["alt+super+f"],
    "command": "replace_next"
  },

  // ⌘G Next match
  {
    "keys": ["super+g"],
    "command": "find_next"
  },

  // ⇧⌘G Previous match
  {
    "keys": ["shift+super+g"],
    "command": "find_prev"
  },


// Multiple Cursors
// ----------------

  // ⌥⌘D Skip selection
  {
    "keys": ["alt+super+d"],
    "command": "find_under_expand_skip"
  },

// Text commands
// -------------

  // ⌘V Paste and indent by default
  {
    "keys": ["super+v"],
    "command": "paste_and_indent"
  },

  // F5 Sort lines
  {
    "keys": ["f5"],
    "command": "sort_lines",
    "args": {"case_sensitive": false}
  },

// Window Management
// -----------------

  // ⇧⌃⌥⌘W Close All windows
  {
    "keys": ["shift+ctrl+alt+super+w"],
    "command": "close_all"
  },

  // ⌃⌥⌘D Toggle Drawer
  {
    "keys": ["ctrl+alt+super+d"],
    "command": "toggle_side_bar"
  },

  // ⌃⌥⌘M Toggle Mini Map
  {
    "keys": ["ctrl+alt+super+m"],
    "command": "toggle_minimap"
  },

  // ⇧⌘T Reopen tab
  {
    "keys": ["shift+super+t"],
    "command": "reopen_last_file"
  },

// File Management
// ---------------

  // ⌘N New file
  {
    "keys": ["super+n"],
    "command": "advanced_new_file_new"},

  // ⇧⌘M Open Latest Migration
  {
    "keys": ["shift+super+m"],
    "command": "rails_latest_migration"
  },

  // ⇧⌘F Find and Replace in Project
  {
    "keys": ["shift+super+f"],
    "command": "show_panel",
    "args": {"panel": "find_in_files"}
  },

  // ⌘F Find and Replace
  {
    "keys": ["super+f"],
    "command": "show_panel",
    "args": {"panel": "replace"}
  },

  // ⌃⌘R Show file in sidebar
  {
    "keys": ["ctrl+super+r"],
    "command": "reveal_in_side_bar"
  },

  // ⇧⌃⌘N New Scratchpad
  {
    "keys": ["shift+ctrl+super+n"],
    "command": "scratchpad"
  },

// Text case
// ---------

  // ⌥⌘U Uppercase
  {
    "keys": ["ctrl+alt+super+u"],
    "command": "upper_case"
  },

  // ⌥⌘L Lowercase
  {
    "keys": ["alt+super+l"],
    "command": "lower_case"
  },

  // ⌃⌥⌘U Titlecase
  {
    "keys": ["alt+super+u"],
    "command": "title_case"
  },

// Text Insertion
// -----------------

  // ⌥⌘= Hash Rocket
  {
    "keys": ["alt+super+="],
    "command": "insert_snippet",
    "args": {"contents": "=>"}
  },

  // ⌥⌘` Spermy lock operator
  {
    "keys": ["alt+super+`"],
    "command": "insert_snippet",
    "args": {"contents": "~>"}
  },

  // ⌃0 Insert right parens
  {
    "keys": ["ctrl+0"],
    "command": "insert_snippet",
    "args": {"contents": ")"}},

  // ⌃9 Insert left parens
  {
    "keys": ["ctrl+9"],
    "command": "insert_snippet",
    "args": {"contents": "("}
    },

  // ⌃' Insert double quotes
  {
    "keys": ["ctrl+'"],
    "command": "insert_snippet",
    "args": {"contents": "\""}
  },

  // ⌥⌘- Stabby Arrow
  {
    "keys": ["alt+super+-"],
    "command": "insert_snippet",
    "args": {"contents": "->"}
  },

  // ⇧⌥⌘_ To Underscore
  {
    "keys": ["shift+ctrl+-"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/sh-string-to-underline.sublime-snippet"}
  },

  // ⌃⌥⌘= Convert Hash Rockets
  {
    "keys": ["ctrl+alt+super+="],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-hash-convert.sublime-snippet"}
  },

  // ⇧⌃: String to Symbol
  {
    "keys": ["shift+ctrl+;"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-symbolize.sublime-snippet"}
  },

  // ⇧⌘" Symbol to String
  {
    "keys": ["shift+super+'"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-unsymbolize.sublime-snippet"}
  },

  // ⌥⌘CColor picker
  {
    "keys": ["alt+super+c"], "command": "color_pick"
  },

  // ⌃; Add semicolon at end of line
  {
    "keys": ["ctrl+;"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ";"}]
      ]
    }
  },

  // ⌃= Add == at end of line
  {
    "keys": ["ctrl+="],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": " = "}]
      ]
    }
  },

  // ⇧⌃; Add semicolon at end of line, insert new line
  {
    "keys": ["shift+ctrl+;"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ";"}],
        ["run_macro_file", {"file": "res://Packages/Default/Add Line.sublime-macro"}]
      ]
    }
  },


  // ⌃, Add comma at end of line
  {
    "keys": ["ctrl+,"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ","}]
      ]
    }
  },

  // ⇧⌃, Add comma at end of line, insert new line
  {
    "keys": ["shift+ctrl+,"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ","}],
        ["run_macro_file", {"file": "res://Packages/Default/Add Line.sublime-macro"}]
      ]
    }
  },

  // ⌃space, Add space between the last character
  {
    "keys": ["ctrl+space"],
    "command": "chain",
    "args": {

      "commands": [
        ["move_to", { "to": "eol" }],
        ["move", {"by": "characters", "forward": false }],
        ["insert_snippet", {"contents": " "}],
      ]
    }
  },

  {
    "keys": ["ctrl+o"],
    "command": "markdown_preview_select",
    "args": { "target": "browser" }
  },

  // ⌃⌘L Sublime linter
  {
    "keys": ["ctrl+super+l"],
    "command": "sublimelinter_show_errors",
    "args": {"action": "lint", "show_popup": true}
  },

// Ruby Test
// ---------

  // ⇧⌘R Run Single Test
  {
    "keys": ["super+r"], "command": "run_single_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // ⌘R All Tests
  {
    "keys": ["shift+super+r"], "command": "run_all_ruby_test",
      "context": [
        {
          "key": "selector",
          "operator": "equal",
          "operand": "source.ruby, source.rspec, text.gherkin.feature"
        }
      ]
  },

  // ⌘R All Tests (RubyMine Style)
  {
    "keys": ["shift+ctrl+f10"], "command": "run_all_ruby_test",
      "context": [
        {
          "key": "selector",
          "operator": "equal",
          "operand": "source.ruby, source.rspec, text.gherkin.feature"
        }
      ]
  },

  // ⇧⌘E Run Last Test
  {
    "keys": ["shift+super+e"], "command": "run_last_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // ⇧⌘E Run Last Test (RubyMine style)
  {
    "keys": ["shift+f10"], "command": "run_last_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // ⇧⌘X Toggle Test Console
  {
    "keys": ["shift+super+x"], "command": "show_test_panel" },

  // ⇧⌥V Verify File
  {
    "keys": ["shift+alt+v"], "command": "verify_ruby_file",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
                    "operand": "source.ruby"
      }
    ]
  },

  // ⌘. Switch between code and test view default to split view
  {
    "keys": ["super+period"],
    "command": "switch_between_code_and_test",
    "args": {"split_view": true},
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  }
]
