[
// File Management
// ---------------

  // Open Keybindings file
  { "keys": ["alt+super+,"], "command": "open_file", "args": { "file": "${packages}/User/Default (OSX).sublime-keymap" } },

  // Rename file
  { "keys": ["super+alt+ctrl+shift+r"], "command": "side_bar_rename" },
  { "keys": ["super+alt+ctrl+shift+m"], "command": "side_bar_move" },

  // Cycle views
  { "keys": ["super+shift+["], "command": "prev_view_in_group" },
  { "keys": ["super+shift+]"], "command": "next_view_in_group" },

// Selection
  // Find and Replace in file by default
  { "keys": ["super+f"], "command": "show_panel", "args": {"panel": "replace"} },
  // Find and Replace in project by default
  { "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
  // Replace next match
  { "keys": ["super+alt+f"], "command": "replace_next" },
  // Find next match
  { "keys": ["super+g"], "command": "find_next" },
  // Find previous match
  { "keys": ["super+shift+g"], "command": "find_prev" },

  // ⌘V Paste and indent
  { "keys": ["super+v"], "command": "paste_and_indent" },
  // ⌥⌘D Skip selection
  { "keys": ["alt+super+d"], "command": "find_under_expand_skip" },

  // ⌥⌘F Replace selection
  { "keys": ["alt+super+f"], "command": "replace_next" },

  // ⌘G Next match
  { "keys": ["super+g"], "command": "find_next" },

  // ⇧⌘G Previous match
  { "keys": ["shift+super+g"], "command": "find_prev" },

  // F5 Sort lines
  { "keys": ["f5"], "command": "sort_lines", "args": {"case_sensitive": false} },

  // Replace selection `⌥⌘F`
  {
    "keys": ["alt+super+f"],
    "command": "replace_next"
  },

  // Next match `⌘G`
  {
    "keys": ["super+g"],
    "command": "find_next"
  },

  // ⇧⌘F Find and Replace in Project
  { "keys": ["shift+super+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },

// Text Insertion
// -----------------

  // Hash Rocket `⌥⌘=`
  {
    "keys": ["alt+super+="],
    "command": "insert_snippet",
    "args": {"contents": "=>"}
  },

  // Spermy lock operator `⌥⌘\``
  {
    "keys": ["alt+super+`"],
    "command": "insert_snippet",
    "args": {"contents": "~>"}
  },

  // Insert right parens `⌃0`
  {
    "keys": ["ctrl+0"],
    "command": "insert_snippet",
    "args": {"contents": ")"}
  },

  // Insert left parens `⌃9`
  {
    "keys": ["ctrl+9"],
    "command": "insert_snippet",
    "args": {"contents": "("}
  },

  // Insert double quotes `⌃'`
  {
    "keys": ["ctrl+'"],
    "command": "insert_snippet",
    "args": {"contents": "\""}
  },

  // Stabby Arrow `⌥⌘-`
  {
    "keys": ["alt+super+-"],
    "command": "insert_snippet",
    "args": {"contents": "->"}
  },

  // To Underscore `⇧⌥⌘_`
  {
    "keys": ["shift+ctrl+-"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/sh-string-to-underline.sublime-snippet"}
  },

  // Convert Hash Rockets `⌃⌥⌘=`
  {
    "keys": ["ctrl+alt+super+="],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-hash-convert.sublime-snippet"}
  },

  // String to Symbol `⇧⌃:`
  {
    "keys": ["shift+ctrl+;"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-symbolize.sublime-snippet"}
  },

  // Symbol to String `⇧⌘"`
  {
    "keys": ["shift+super+'"],
    "command": "insert_snippet",
    "args": {"name": "Packages/User/snippets/ruby-unsymbolize.sublime-snippet"}
  },

  // Color picker `⌥⌘C`
  {
    "keys": ["alt+super+c"], "command": "color_pick"
  },

  // Add semicolon at end of line `⌃;`
  {
    "keys": ["ctrl+;"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ";"}]
      ]
    }
  },

  // Add == at end of line `⌃=`
  {
    "keys": ["ctrl+="],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": " = "}]
      ]
    }
  },

  // Add semicolon at end of line, insert new line `⇧⌃;`
  {
    "keys": ["shift+ctrl+;"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ";"}],
        ["run_macro_file", {"file": "res://Packages/Default/Add Line.sublime-macro"}]
      ]
    }
  },

  // Add comma at end of line `⌃,`
  {
    "keys": ["ctrl+,"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ","}]
      ]
    }
  },

  // Add comma at end of line, insert new line `⇧⌃,`
  {
    "keys": ["shift+ctrl+,"],
    "command": "chain",
    "args": {
      "commands": [
        ["move_to", { "to": "eol" }],
        ["insert_snippet", {"contents": ","}],
        ["run_macro_file", {"file": "res://Packages/Default/Add Line.sublime-macro"}]
      ]
    }
  },

  // Add space between the last character `⌃⎵`
  {
    "keys": ["ctrl+space"],
    "command": "chain",
    "args": {

      "commands": [
        ["move_to", { "to": "eol" }],
        ["move", {"by": "characters", "forward": false }],
        ["insert_snippet", {"contents": " "}],
      ]
    }
  },

  {
    "keys": ["ctrl+o"],
    "command": "markdown_preview_select",
    "args": { "target": "browser" }
  },

  // Sublime linter `⌃⌘L`
  {
    "keys": ["ctrl+super+l"],
    "command": "sublimelinter_show_errors",
    "args": {"action": "lint", "show_popup": true}
  },

// Ruby Test
// ---------

  // Run Single Test `⇧⌘R`
  {
    "keys": ["super+r"], "command": "run_single_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // All Tests `⌘R`
  {
    "keys": ["shift+super+r"], "command": "run_all_ruby_test",
      "context": [
        {
          "key": "selector",
          "operator": "equal",
          "operand": "source.ruby, source.rspec, text.gherkin.feature"
        }
      ]
  },

  // All Tests (RubyMine Style) `⌘R`
  {
    "keys": ["shift+ctrl+f10"], "command": "run_all_ruby_test",
      "context": [
        {
          "key": "selector",
          "operator": "equal",
          "operand": "source.ruby, source.rspec, text.gherkin.feature"
        }
      ]
  },

  // Run Last Test `⇧⌘E`
  {
    "keys": ["shift+super+e"], "command": "run_last_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // Run Last Test (RubyMine style) `⇧⌘E`
  {
    "keys": ["shift+f10"], "command": "run_last_ruby_test",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  },

  // Toggle Test Console `⇧⌘X`
  {
    "keys": ["shift+super+x"], "command": "show_test_panel"
  },

  // Verify File `⇧⌥V`
  {
    "keys": ["shift+alt+v"], "command": "verify_ruby_file",
    "context": [
      {
        "key": "selector",
        "operator": "equal",
                    "operand": "source.ruby"
      }
    ]
  },

  // Switch between code and test view default to split view `⌘.`
  {
    "keys": ["super+period"],
    "command": "switch_between_code_and_test",
    "args": {"split_view": true},
    "context": [
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.ruby, source.rspec, text.gherkin.feature"
      }
    ]
  }
]
